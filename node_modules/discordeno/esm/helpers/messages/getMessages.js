/** Fetches between 2-100 messages. Requires VIEW_CHANNEL and READ_MESSAGE_HISTORY */
export async function getMessages(bot, channelId, options) {
    if (options?.limit && (options.limit < 0 || options.limit > 100)) {
        throw new Error(bot.constants.Errors.INVALID_GET_MESSAGES_LIMIT);
    }
    let url = bot.constants.endpoints.CHANNEL_MESSAGES(channelId);
    if (options) {
        url += "?";
        if (isGetMessagesAfter(options) && options.after)
            url += `after=${options.after}`;
        if (isGetMessagesBefore(options) && options.before)
            url += `&before=${options.before}`;
        if (isGetMessagesAround(options) && options.around)
            url += `&around=${options.around}`;
        if (isGetMessagesLimit(options) && options.limit)
            url += `&limit=${options.limit}`;
    }
    const result = await bot.rest.runMethod(bot.rest, "get", url);
    return await Promise.all(result.map((res) => bot.transformers.message(bot, res)));
}
export function isGetMessagesAfter(options) {
    return Reflect.has(options, "after");
}
export function isGetMessagesBefore(options) {
    return Reflect.has(options, "before");
}
export function isGetMessagesAround(options) {
    return Reflect.has(options, "around");
}
export function isGetMessagesLimit(options) {
    return Reflect.has(options, "limit");
}
