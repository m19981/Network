// deno-lint-ignore-file no-unused-vars
import { checkRateLimits } from "./checkRateLimits.js";
import { cleanupQueues } from "./cleanupQueues.js";
import { createRequestBody } from "./createRequestBody.js";
import { processQueue } from "./processQueue.js";
import { processRateLimitedPaths } from "./processRateLimitedPaths.js";
import { processRequest } from "./processRequest.js";
import { processRequestHeaders } from "./processRequestHeaders.js";
import { runMethod } from "./runMethod.js";
import { runProxyMethod } from "./runProxyMethod.js";
import { simplifyUrl } from "./simplifyUrl.js";
export const rest = {
    /** The bot token for this rest client. */
    token: "",
    /** The maximum amount of retries allowed */
    maxRetryCount: 10,
    apiVersion: "9",
    /** The secret authorization key to confirm that this was a request made by you and not a DDOS attack. */
    authorization: "discordeno_best_lib_ever",
    pathQueues: new Map(),
    processingQueue: false,
    processingRateLimitedPaths: false,
    globallyRateLimited: false,
    rateLimitedPaths: new Map(),
    eventHandlers: {
        // BY DEFAULT WE WILL LOG ALL ERRORS TO CONSOLE. USER CAN CHOOSE TO OVERRIDE
        error: function (...args) { },
        // PLACEHOLDERS TO ALLOW USERS TO CUSTOMIZE
        debug: function (type, error) { },
        fetching(payload) { },
        fetched(payload) { },
        fetchSuccess(payload) { },
        fetchFailed(payload, error) { },
        globallyRateLimited(url, resetsAt) { },
        retriesMaxed(payload) { },
    },
    /** Handler function for every request. Converts to json, verified authorization & requirements and begins processing the request */
    checkRateLimits,
    cleanupQueues,
    processQueue,
    processRateLimitedPaths,
    processRequestHeaders,
    processRequest,
    createRequestBody,
    runMethod,
    runProxyMethod,
    simplifyUrl,
};
