import { Bot } from "../bot.js";
import { DiscordInteraction, DiscordInteractionDataOption, DiscordInteractionDataResolved } from "../types/discord.js";
import { ChannelTypes } from "../types/shared.js";
import { Collection } from "../util/collection.js";
import { Attachment } from "./attachment.js";
import { Member, User } from "./member.js";
import { Message } from "./message.js";
import { Role } from "./role.js";
export declare function transformInteraction(bot: Bot, payload: DiscordInteraction): {
    data?: {
        values?: string[] | undefined;
        id?: bigint | undefined;
        options?: {
            value?: string | number | boolean | {
                pending?: boolean | undefined;
                mute?: boolean | undefined;
                user?: {
                    avatar?: string | null | undefined;
                    locale?: string | undefined;
                    flags?: import("../types/shared.js").UserFlags | undefined;
                    premium_type?: import("../types/shared.js").PremiumTypes | undefined;
                    public_flags?: import("../types/shared.js").UserFlags | undefined;
                    accent_color?: number | undefined;
                    bot?: boolean | undefined;
                    system?: boolean | undefined;
                    mfa_enabled?: boolean | undefined;
                    verified?: boolean | undefined;
                    email?: string | null | undefined;
                    banner?: string | undefined;
                    id: string;
                    discriminator: string;
                    username: string;
                } | undefined;
                permissions?: string | undefined;
                avatar?: string | undefined;
                deaf?: boolean | undefined;
                nick?: string | null | undefined;
                premium_since?: string | null | undefined;
                communication_disabled_until?: string | null | undefined;
                roles: string[];
                joined_at: string;
            } | {
                name?: string | undefined;
                position?: number | undefined;
                permissions?: string | undefined;
                guild_id?: string | undefined;
                member?: {
                    id: string;
                    flags: number;
                    user_id: string;
                    join_timestamp: string;
                } | undefined;
                topic?: string | null | undefined;
                bitrate?: number | undefined;
                user_limit?: number | undefined;
                rate_limit_per_user?: number | undefined;
                rtc_region?: string | null | undefined;
                video_quality_mode?: import("../types/shared.js").VideoQualityModes | undefined;
                message_count?: number | undefined;
                member_count?: number | undefined;
                default_auto_archive_duration?: number | undefined;
                permission_overwrites?: {
                    allow?: string | undefined;
                    deny?: string | undefined;
                    type: import("../types/shared.js").OverwriteTypes;
                    id: string;
                }[] | undefined;
                nsfw?: boolean | undefined;
                last_message_id?: string | null | undefined;
                owner_id?: string | undefined;
                application_id?: string | undefined;
                parent_id?: string | null | undefined;
                last_pin_timestamp?: string | null | undefined;
                thread_metadata?: {
                    invitable?: boolean | undefined;
                    create_timestamp?: string | null | undefined;
                    auto_archive_duration: 60 | 1440 | 4320 | 10080;
                    archived: boolean;
                    locked: boolean;
                    archive_timestamp: string;
                } | undefined;
                newly_created?: boolean | undefined;
                type: ChannelTypes;
                id: string;
            } | {
                icon?: string | undefined;
                unicode_emoji?: string | undefined;
                tags?: {
                    bot_id?: string | undefined;
                    integration_id?: string | undefined;
                    premium_subscriber?: null | undefined;
                } | undefined;
                id: string;
                name: string;
                color: number;
                position: number;
                permissions: string;
                hoist: boolean;
                mentionable: boolean;
                managed: boolean;
            } | undefined;
            options?: {
                value?: string | number | boolean | {
                    pending?: boolean | undefined;
                    mute?: boolean | undefined;
                    user?: {
                        avatar?: string | null | undefined;
                        locale?: string | undefined;
                        flags?: import("../types/shared.js").UserFlags | undefined;
                        premium_type?: import("../types/shared.js").PremiumTypes | undefined;
                        public_flags?: import("../types/shared.js").UserFlags | undefined;
                        accent_color?: number | undefined;
                        bot?: boolean | undefined;
                        system?: boolean | undefined;
                        mfa_enabled?: boolean | undefined;
                        verified?: boolean | undefined;
                        email?: string | null | undefined;
                        banner?: string | undefined;
                        id: string;
                        discriminator: string;
                        username: string;
                    } | undefined;
                    permissions?: string | undefined;
                    avatar?: string | undefined;
                    deaf?: boolean | undefined;
                    nick?: string | null | undefined;
                    premium_since?: string | null | undefined;
                    communication_disabled_until?: string | null | undefined;
                    roles: string[];
                    joined_at: string;
                } | {
                    name?: string | undefined;
                    position?: number | undefined;
                    permissions?: string | undefined;
                    guild_id?: string | undefined;
                    member?: {
                        id: string;
                        flags: number;
                        user_id: string;
                        join_timestamp: string;
                    } | undefined;
                    topic?: string | null | undefined;
                    bitrate?: number | undefined;
                    user_limit?: number | undefined;
                    rate_limit_per_user?: number | undefined;
                    rtc_region?: string | null | undefined;
                    video_quality_mode?: import("../types/shared.js").VideoQualityModes | undefined;
                    message_count?: number | undefined;
                    member_count?: number | undefined;
                    default_auto_archive_duration?: number | undefined;
                    permission_overwrites?: {
                        allow?: string | undefined;
                        deny?: string | undefined;
                        type: import("../types/shared.js").OverwriteTypes;
                        id: string;
                    }[] | undefined;
                    nsfw?: boolean | undefined;
                    last_message_id?: string | null | undefined;
                    owner_id?: string | undefined;
                    application_id?: string | undefined;
                    parent_id?: string | null | undefined;
                    last_pin_timestamp?: string | null | undefined;
                    thread_metadata?: {
                        invitable?: boolean | undefined;
                        create_timestamp?: string | null | undefined;
                        auto_archive_duration: 60 | 1440 | 4320 | 10080;
                        archived: boolean;
                        locked: boolean;
                        archive_timestamp: string;
                    } | undefined;
                    newly_created?: boolean | undefined;
                    type: ChannelTypes;
                    id: string;
                } | {
                    icon?: string | undefined;
                    unicode_emoji?: string | undefined;
                    tags?: {
                        bot_id?: string | undefined;
                        integration_id?: string | undefined;
                        premium_subscriber?: null | undefined;
                    } | undefined;
                    id: string;
                    name: string;
                    color: number;
                    position: number;
                    permissions: string;
                    hoist: boolean;
                    mentionable: boolean;
                    managed: boolean;
                } | undefined;
                options?: any[] | undefined;
                focused?: boolean | undefined;
                type: import("../types/shared.js").ApplicationCommandOptionTypes;
                name: string;
            }[] | undefined;
            focused?: boolean | undefined;
            type: import("../types/shared.js").ApplicationCommandOptionTypes;
            name: string;
        }[] | undefined;
        targetId?: bigint | undefined;
        components?: {
            url?: string | undefined;
            value?: string | undefined;
            label?: string | undefined;
            style?: import("../types/shared.js").ButtonStyles | import("../types/shared.js").TextStyles | undefined;
            disabled?: boolean | undefined;
            options?: {
                description?: string | undefined;
                default?: boolean | undefined;
                emoji?: {
                    id?: bigint | undefined;
                    name?: string | undefined;
                    animated?: boolean | undefined;
                } | undefined;
                value: string;
                label: string;
            }[] | undefined;
            emoji?: {
                id?: bigint | undefined;
                name?: string | undefined;
                animated?: boolean | undefined;
            } | undefined;
            components?: any[] | undefined;
            customId?: string | undefined;
            placeholder?: string | undefined;
            minValues?: number | undefined;
            maxValues?: number | undefined;
            type: import("../types/shared.js").MessageComponentTypes;
        }[] | undefined;
        resolved?: {
            roles?: Collection<bigint, Role> | undefined;
            members?: Collection<bigint, Member> | undefined;
            channels?: Collection<bigint, {
                id: bigint;
                name: string;
                type: ChannelTypes;
                permissions: bigint;
            }> | undefined;
            attachments?: Collection<bigint, Attachment> | undefined;
            messages?: Collection<bigint, Message> | undefined;
            users?: Collection<bigint, User> | undefined;
        } | undefined;
        componentType?: import("../types/shared.js").MessageComponentTypes | undefined;
        customId?: string | undefined;
        name: string;
    } | undefined;
    message?: {
        application?: {
            description?: string | undefined;
            id?: string | undefined;
            name?: string | undefined;
            flags?: import("../types/shared.js").ApplicationFlags | undefined;
            guild_id?: string | undefined;
            rpc_origins?: string[] | undefined;
            terms_of_service_url?: string | undefined;
            privacy_policy_url?: string | undefined;
            verify_key?: string | undefined;
            primary_sku_id?: string | undefined;
            slug?: string | undefined;
            icon?: string | null | undefined;
            bot_public?: boolean | undefined;
            bot_require_code_grant?: boolean | undefined;
            owner?: {
                id?: string | undefined;
                avatar?: string | null | undefined;
                discriminator?: string | undefined;
                username?: string | undefined;
                locale?: string | undefined;
                flags?: import("../types/shared.js").UserFlags | undefined;
                premium_type?: import("../types/shared.js").PremiumTypes | undefined;
                public_flags?: import("../types/shared.js").UserFlags | undefined;
                accent_color?: number | undefined;
                bot?: boolean | undefined;
                system?: boolean | undefined;
                mfa_enabled?: boolean | undefined;
                verified?: boolean | undefined;
                email?: string | null | undefined;
                banner?: string | undefined;
            } | undefined;
            team?: {
                icon?: string | null | undefined;
                id: string;
                name: string;
                members: import("../types/discord.js").DiscordTeamMember[];
                owner_user_id: string;
            } | null | undefined;
            cover_image?: string | undefined;
        } | undefined;
        flags?: number | undefined;
        guildId?: bigint | undefined;
        member?: {
            permissions?: bigint | undefined;
            avatar?: bigint | undefined;
            nick?: string | undefined;
            premiumSince?: number | undefined;
            communicationDisabledUntil?: number | undefined;
            id: bigint;
            guildId: bigint;
            roles: bigint[];
            toggles: {
                add: (bits: number) => import("./mod.js").MemberToggles;
                remove: (bits: number) => import("./mod.js").MemberToggles;
                contains: (bits: number) => boolean;
                pending: boolean;
                mute: boolean;
                deaf: boolean;
                has: (permissions: "pending" | "mute" | "deaf" | ("pending" | "mute" | "deaf")[]) => boolean;
                list: () => Record<"pending" | "mute" | "deaf", boolean>;
                bitfield: number;
            };
            joinedAt: number;
        } | undefined;
        applicationId?: bigint | undefined;
        editedTimestamp?: number | undefined;
        reactions?: {
            emoji: {
                id?: bigint | undefined;
                name?: string | undefined;
                user?: {
                    avatar?: bigint | undefined;
                    locale?: string | undefined;
                    flags?: import("../types/shared.js").UserFlags | undefined;
                    email?: string | undefined;
                    premiumType?: import("../types/shared.js").PremiumTypes | undefined;
                    publicFlags?: import("../types/shared.js").UserFlags | undefined;
                    id: bigint;
                    discriminator: string;
                    username: string;
                    toggles: {
                        add: (bits: number) => import("./mod.js").UserToggles;
                        remove: (bits: number) => import("./mod.js").UserToggles;
                        contains: (bits: number) => boolean;
                        bot: boolean;
                        system: boolean;
                        verified: boolean;
                        mfaEnabled: boolean;
                        has: (permissions: "bot" | "system" | "verified" | "mfaEnabled" | ("bot" | "system" | "verified" | "mfaEnabled")[]) => boolean;
                        list: () => Record<"bot" | "system" | "verified" | "mfaEnabled", boolean>;
                        bitfield: number;
                    };
                } | undefined;
                roles?: bigint[] | undefined;
                toggles: {
                    add: (bits: number) => import("./mod.js").EmojiToggles;
                    remove: (bits: number) => import("./mod.js").EmojiToggles;
                    contains: (bits: number) => boolean;
                    managed: boolean;
                    animated: boolean;
                    requireColons: boolean;
                    available: boolean;
                    has: (permissions: "managed" | "animated" | "requireColons" | "available" | ("managed" | "animated" | "requireColons" | "available")[]) => boolean;
                    list: () => Record<"managed" | "animated" | "requireColons" | "available", boolean>;
                    bitfield: number;
                };
            };
            count: number;
            me: boolean;
        }[] | undefined;
        activity?: {
            partyId?: string | undefined;
            type: import("../types/shared.js").MessageActivityTypes;
        } | undefined;
        interaction?: {
            member?: {
                permissions?: bigint | undefined;
                avatar?: bigint | undefined;
                guildId?: bigint | undefined;
                nick?: string | undefined;
                roles?: bigint[] | undefined;
                joinedAt?: number | undefined;
                premiumSince?: number | undefined;
                communicationDisabledUntil?: number | undefined;
                id: bigint;
                toggles: {
                    add: (bits: number) => import("./mod.js").MemberToggles;
                    remove: (bits: number) => import("./mod.js").MemberToggles;
                    contains: (bits: number) => boolean;
                    pending: boolean;
                    mute: boolean;
                    deaf: boolean;
                    has: (permissions: "pending" | "mute" | "deaf" | ("pending" | "mute" | "deaf")[]) => boolean;
                    list: () => Record<"pending" | "mute" | "deaf", boolean>;
                    bitfield: number;
                };
            } | undefined;
            type: import("../types/shared.js").InteractionTypes;
            id: bigint;
            name: string;
            user: {
                avatar?: bigint | undefined;
                locale?: string | undefined;
                flags?: import("../types/shared.js").UserFlags | undefined;
                email?: string | undefined;
                premiumType?: import("../types/shared.js").PremiumTypes | undefined;
                publicFlags?: import("../types/shared.js").UserFlags | undefined;
                id: bigint;
                discriminator: string;
                username: string;
                toggles: {
                    add: (bits: number) => import("./mod.js").UserToggles;
                    remove: (bits: number) => import("./mod.js").UserToggles;
                    contains: (bits: number) => boolean;
                    bot: boolean;
                    system: boolean;
                    verified: boolean;
                    mfaEnabled: boolean;
                    has: (permissions: "bot" | "system" | "verified" | "mfaEnabled" | ("bot" | "system" | "verified" | "mfaEnabled")[]) => boolean;
                    list: () => Record<"bot" | "system" | "verified" | "mfaEnabled", boolean>;
                    bitfield: number;
                };
            };
        } | undefined;
        thread?: {
            name?: string | undefined;
            position?: number | undefined;
            permissions?: bigint | undefined;
            topic?: string | undefined;
            bitrate?: number | undefined;
            nsfw?: boolean | undefined;
            archived?: boolean | undefined;
            locked?: boolean | undefined;
            invitable?: boolean | undefined;
            applicationId?: bigint | undefined;
            userLimit?: number | undefined;
            rateLimitPerUser?: number | undefined;
            rtcRegion?: string | undefined;
            videoQualityMode?: import("../types/shared.js").VideoQualityModes | undefined;
            lastPinTimestamp?: number | undefined;
            lastMessageId?: bigint | undefined;
            ownerId?: bigint | undefined;
            parentId?: bigint | undefined;
            memberCount?: number | undefined;
            messageCount?: number | undefined;
            archiveTimestamp?: number | undefined;
            autoArchiveDuration?: 60 | 1440 | 4320 | 10080 | undefined;
            createTimestamp?: number | undefined;
            newlyCreated?: boolean | undefined;
            type: ChannelTypes;
            id: bigint;
            guildId: bigint;
            permissionOverwrites: bigint[];
            botIsMember: boolean;
        } | undefined;
        components?: {
            url?: string | undefined;
            value?: string | undefined;
            label?: string | undefined;
            style?: import("../types/shared.js").ButtonStyles | import("../types/shared.js").TextStyles | undefined;
            disabled?: boolean | undefined;
            options?: {
                description?: string | undefined;
                default?: boolean | undefined;
                emoji?: {
                    id?: bigint | undefined;
                    name?: string | undefined;
                    animated?: boolean | undefined;
                } | undefined;
                value: string;
                label: string;
            }[] | undefined;
            emoji?: {
                id?: bigint | undefined;
                name?: string | undefined;
                animated?: boolean | undefined;
            } | undefined;
            components?: any[] | undefined;
            customId?: string | undefined;
            placeholder?: string | undefined;
            minValues?: number | undefined;
            maxValues?: number | undefined;
            type: import("../types/shared.js").MessageComponentTypes;
        }[] | undefined;
        stickerItems?: {
            id: bigint;
            name: string;
            formatType: import("../types/shared.js").StickerFormatTypes;
        }[] | undefined;
        webhookId?: bigint | undefined;
        messageReference?: {
            guildId?: bigint | undefined;
            channelId?: bigint | undefined;
            messageId?: bigint | undefined;
        } | undefined;
        type: import("../types/shared.js").MessageTypes;
        id: bigint;
        content: string;
        bitfield: bigint;
        channelId: bigint;
        timestamp: number;
        isBot: boolean;
        tag: string;
        attachments: Attachment[];
        embeds: import("./embed.js").Embed[];
        authorId: bigint;
        mentionedUserIds: bigint[];
        mentionedRoleIds: bigint[];
        mentionedChannelIds: bigint[];
    } | undefined;
    locale?: string | undefined;
    guildId?: bigint | undefined;
    member?: {
        permissions?: bigint | undefined;
        avatar?: bigint | undefined;
        nick?: string | undefined;
        premiumSince?: number | undefined;
        communicationDisabledUntil?: number | undefined;
        id: bigint;
        guildId: bigint;
        roles: bigint[];
        toggles: {
            add: (bits: number) => import("./mod.js").MemberToggles;
            remove: (bits: number) => import("./mod.js").MemberToggles;
            contains: (bits: number) => boolean;
            pending: boolean;
            mute: boolean;
            deaf: boolean;
            has: (permissions: "pending" | "mute" | "deaf" | ("pending" | "mute" | "deaf")[]) => boolean;
            list: () => Record<"pending" | "mute" | "deaf", boolean>;
            bitfield: number;
        };
        joinedAt: number;
    } | undefined;
    channelId?: bigint | undefined;
    guildLocale?: string | undefined;
    type: import("../types/shared.js").InteractionTypes;
    id: bigint;
    user: {
        avatar?: bigint | undefined;
        locale?: string | undefined;
        flags?: import("../types/shared.js").UserFlags | undefined;
        email?: string | undefined;
        premiumType?: import("../types/shared.js").PremiumTypes | undefined;
        publicFlags?: import("../types/shared.js").UserFlags | undefined;
        id: bigint;
        discriminator: string;
        username: string;
        toggles: {
            add: (bits: number) => import("./mod.js").UserToggles;
            remove: (bits: number) => import("./mod.js").UserToggles;
            contains: (bits: number) => boolean;
            bot: boolean;
            system: boolean;
            verified: boolean;
            mfaEnabled: boolean;
            has: (permissions: "bot" | "system" | "verified" | "mfaEnabled" | ("bot" | "system" | "verified" | "mfaEnabled")[]) => boolean;
            list: () => Record<"bot" | "system" | "verified" | "mfaEnabled", boolean>;
            bitfield: number;
        };
    };
    applicationId: bigint;
    version: 1;
    token: string;
};
export declare function transformInteractionDataOption(bot: Bot, option: DiscordInteractionDataOption): {
    value?: string | number | boolean | {
        pending?: boolean | undefined;
        mute?: boolean | undefined;
        user?: {
            avatar?: string | null | undefined;
            locale?: string | undefined;
            flags?: import("../types/shared.js").UserFlags | undefined;
            premium_type?: import("../types/shared.js").PremiumTypes | undefined;
            public_flags?: import("../types/shared.js").UserFlags | undefined;
            accent_color?: number | undefined;
            bot?: boolean | undefined;
            system?: boolean | undefined;
            mfa_enabled?: boolean | undefined;
            verified?: boolean | undefined;
            email?: string | null | undefined;
            banner?: string | undefined;
            id: string;
            discriminator: string;
            username: string;
        } | undefined;
        permissions?: string | undefined;
        avatar?: string | undefined;
        deaf?: boolean | undefined;
        nick?: string | null | undefined;
        premium_since?: string | null | undefined;
        communication_disabled_until?: string | null | undefined;
        roles: string[];
        joined_at: string;
    } | {
        name?: string | undefined;
        position?: number | undefined;
        permissions?: string | undefined;
        guild_id?: string | undefined;
        member?: {
            id: string;
            flags: number;
            user_id: string;
            join_timestamp: string;
        } | undefined;
        topic?: string | null | undefined;
        bitrate?: number | undefined;
        user_limit?: number | undefined;
        rate_limit_per_user?: number | undefined;
        rtc_region?: string | null | undefined;
        video_quality_mode?: import("../types/shared.js").VideoQualityModes | undefined;
        message_count?: number | undefined;
        member_count?: number | undefined;
        default_auto_archive_duration?: number | undefined;
        permission_overwrites?: {
            allow?: string | undefined;
            deny?: string | undefined;
            type: import("../types/shared.js").OverwriteTypes;
            id: string;
        }[] | undefined;
        nsfw?: boolean | undefined;
        last_message_id?: string | null | undefined;
        owner_id?: string | undefined;
        application_id?: string | undefined;
        parent_id?: string | null | undefined;
        last_pin_timestamp?: string | null | undefined;
        thread_metadata?: {
            invitable?: boolean | undefined;
            create_timestamp?: string | null | undefined;
            auto_archive_duration: 60 | 1440 | 4320 | 10080;
            archived: boolean;
            locked: boolean;
            archive_timestamp: string;
        } | undefined;
        newly_created?: boolean | undefined;
        type: ChannelTypes;
        id: string;
    } | {
        icon?: string | undefined;
        unicode_emoji?: string | undefined;
        tags?: {
            bot_id?: string | undefined;
            integration_id?: string | undefined;
            premium_subscriber?: null | undefined;
        } | undefined;
        id: string;
        name: string;
        color: number;
        position: number;
        permissions: string;
        hoist: boolean;
        mentionable: boolean;
        managed: boolean;
    } | undefined;
    options?: {
        value?: string | number | boolean | {
            pending?: boolean | undefined;
            mute?: boolean | undefined;
            user?: {
                avatar?: string | null | undefined;
                locale?: string | undefined;
                flags?: import("../types/shared.js").UserFlags | undefined;
                premium_type?: import("../types/shared.js").PremiumTypes | undefined;
                public_flags?: import("../types/shared.js").UserFlags | undefined;
                accent_color?: number | undefined;
                bot?: boolean | undefined;
                system?: boolean | undefined;
                mfa_enabled?: boolean | undefined;
                verified?: boolean | undefined;
                email?: string | null | undefined;
                banner?: string | undefined;
                id: string;
                discriminator: string;
                username: string;
            } | undefined;
            permissions?: string | undefined;
            avatar?: string | undefined;
            deaf?: boolean | undefined;
            nick?: string | null | undefined;
            premium_since?: string | null | undefined;
            communication_disabled_until?: string | null | undefined;
            roles: string[];
            joined_at: string;
        } | {
            name?: string | undefined;
            position?: number | undefined;
            permissions?: string | undefined;
            guild_id?: string | undefined;
            member?: {
                id: string;
                flags: number;
                user_id: string;
                join_timestamp: string;
            } | undefined;
            topic?: string | null | undefined;
            bitrate?: number | undefined;
            user_limit?: number | undefined;
            rate_limit_per_user?: number | undefined;
            rtc_region?: string | null | undefined;
            video_quality_mode?: import("../types/shared.js").VideoQualityModes | undefined;
            message_count?: number | undefined;
            member_count?: number | undefined;
            default_auto_archive_duration?: number | undefined;
            permission_overwrites?: {
                allow?: string | undefined;
                deny?: string | undefined;
                type: import("../types/shared.js").OverwriteTypes;
                id: string;
            }[] | undefined;
            nsfw?: boolean | undefined;
            last_message_id?: string | null | undefined;
            owner_id?: string | undefined;
            application_id?: string | undefined;
            parent_id?: string | null | undefined;
            last_pin_timestamp?: string | null | undefined;
            thread_metadata?: {
                invitable?: boolean | undefined;
                create_timestamp?: string | null | undefined;
                auto_archive_duration: 60 | 1440 | 4320 | 10080;
                archived: boolean;
                locked: boolean;
                archive_timestamp: string;
            } | undefined;
            newly_created?: boolean | undefined;
            type: ChannelTypes;
            id: string;
        } | {
            icon?: string | undefined;
            unicode_emoji?: string | undefined;
            tags?: {
                bot_id?: string | undefined;
                integration_id?: string | undefined;
                premium_subscriber?: null | undefined;
            } | undefined;
            id: string;
            name: string;
            color: number;
            position: number;
            permissions: string;
            hoist: boolean;
            mentionable: boolean;
            managed: boolean;
        } | undefined;
        options?: any[] | undefined;
        focused?: boolean | undefined;
        type: import("../types/shared.js").ApplicationCommandOptionTypes;
        name: string;
    }[] | undefined;
    focused?: boolean | undefined;
    type: import("../types/shared.js").ApplicationCommandOptionTypes;
    name: string;
};
export declare function transformInteractionDataResolved(bot: Bot, resolved: DiscordInteractionDataResolved, guildId?: bigint): {
    roles?: Collection<bigint, Role> | undefined;
    members?: Collection<bigint, Member> | undefined;
    channels?: Collection<bigint, {
        id: bigint;
        name: string;
        type: ChannelTypes;
        permissions: bigint;
    }> | undefined;
    attachments?: Collection<bigint, Attachment> | undefined;
    messages?: Collection<bigint, Message> | undefined;
    users?: Collection<bigint, User> | undefined;
};
export interface Interaction extends ReturnType<typeof transformInteraction> {
}
export interface InteractionDataResolved extends ReturnType<typeof transformInteractionDataResolved> {
}
export interface InteractionDataOption extends ReturnType<typeof transformInteractionDataOption> {
}
