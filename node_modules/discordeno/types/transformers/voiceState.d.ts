import { Bot } from "../bot.js";
import { DiscordVoiceState } from "../types/discord.js";
import { VoiceStateToggles } from "./toggles/voice.js";
export declare function transformVoiceState(bot: Bot, payload: {
    voiceState: DiscordVoiceState;
} & {
    guildId: bigint;
}): {
    channelId?: bigint | undefined;
    requestToSpeakTimestamp?: number | undefined;
    guildId: bigint;
    toggles: {
        add: (bits: number) => VoiceStateToggles;
        remove: (bits: number) => VoiceStateToggles;
        contains: (bits: number) => boolean;
        mute: boolean;
        deaf: boolean;
        suppress: boolean;
        selfDeaf: boolean;
        selfMute: boolean;
        selfStream: boolean;
        selfVideo: boolean;
        has: (permissions: "mute" | "deaf" | "suppress" | "selfDeaf" | "selfMute" | "selfStream" | "selfVideo" | ("mute" | "deaf" | "suppress" | "selfDeaf" | "selfMute" | "selfStream" | "selfVideo")[]) => boolean;
        list: () => Record<"mute" | "deaf" | "suppress" | "selfDeaf" | "selfMute" | "selfStream" | "selfVideo", boolean>;
        bitfield: number;
    };
    userId: bigint;
    sessionId: string;
};
export interface VoiceState extends ReturnType<typeof transformVoiceState> {
}
