import { Bot } from "../bot.js";
import { DiscordEmoji } from "../types/discord.js";
import { EmojiToggles } from "./toggles/emoji.js";
export declare function transformEmoji(bot: Bot, payload: DiscordEmoji): {
    id?: bigint | undefined;
    name?: string | undefined;
    user?: {
        avatar?: bigint | undefined;
        locale?: string | undefined;
        flags?: import("../types/shared.js").UserFlags | undefined;
        email?: string | undefined;
        premiumType?: import("../types/shared.js").PremiumTypes | undefined;
        publicFlags?: import("../types/shared.js").UserFlags | undefined;
        id: bigint;
        discriminator: string;
        username: string;
        toggles: {
            add: (bits: number) => import("./mod.js").UserToggles;
            remove: (bits: number) => import("./mod.js").UserToggles;
            contains: (bits: number) => boolean;
            bot: boolean;
            system: boolean;
            verified: boolean;
            mfaEnabled: boolean;
            has: (permissions: "bot" | "system" | "verified" | "mfaEnabled" | ("bot" | "system" | "verified" | "mfaEnabled")[]) => boolean;
            list: () => Record<"bot" | "system" | "verified" | "mfaEnabled", boolean>;
            bitfield: number;
        };
    } | undefined;
    roles?: bigint[] | undefined;
    toggles: {
        add: (bits: number) => EmojiToggles;
        remove: (bits: number) => EmojiToggles;
        contains: (bits: number) => boolean;
        managed: boolean;
        animated: boolean;
        requireColons: boolean;
        available: boolean;
        has: (permissions: "managed" | "animated" | "requireColons" | "available" | ("managed" | "animated" | "requireColons" | "available")[]) => boolean;
        list: () => Record<"managed" | "animated" | "requireColons" | "available", boolean>;
        bitfield: number;
    };
};
export interface Emoji extends ReturnType<typeof transformEmoji> {
}
