import { Bot } from "../bot.js";
import { DiscordAuditLogEntry } from "../types/discord.js";
export declare function transformAuditLogEntry(bot: Bot, payload: DiscordAuditLogEntry): {
    reason?: string | undefined;
    options?: {
        id?: bigint | undefined;
        channelId?: bigint | undefined;
        messageId?: bigint | undefined;
        type: number;
        count: number;
        deleteMemberDays: number;
        membersRemoved: number;
        roleName: string;
    } | undefined;
    changes?: ({
        old?: {
            id?: bigint | undefined;
            name?: string | undefined;
        }[] | undefined;
        key: "$add" | "$remove";
        new: {
            id: bigint | undefined;
            name: string | undefined;
        }[];
    } | {
        new?: bigint | undefined;
        old?: bigint | undefined;
        key: "id" | "allow" | "permissions" | "channel_id" | "owner_id" | "application_id" | "discovery_splash_hash" | "banner_hash" | "rules_channel_id" | "public_updates_channel_id" | "icon_hash" | "image_hash" | "splash_hash" | "widget_channel_id" | "system_channel_id" | "deny" | "inviter_id" | "avatar_hash";
    } | {
        key: "description" | "code" | "location" | "name" | "region" | "topic" | "nick" | "preferred_locale" | "afk_channel_id" | "vanity_url_code";
        new: string;
        old: string;
    } | {
        new?: number | undefined;
        old?: number | undefined;
        key: "color" | "position" | "status" | "bitrate" | "user_limit" | "rate_limit_per_user" | "afk_timeout" | "mfa_level" | "verification_level" | "explicit_content_filter" | "default_message_notifications" | "prune_delete_days" | "max_uses" | "uses" | "max_age" | "expire_behavior" | "expire_grace_period" | "privacy_level" | "entity_type";
    } | {
        key: "temporary" | "mute" | "deaf" | "nsfw" | "widget_enabled" | "hoist" | "mentionable" | "enable_emoticons";
        new: boolean;
        old: boolean;
    } | {
        key: "permission_overwrites";
        new: import("../types/discord.js").DiscordOverwrite[];
        old: import("../types/discord.js").DiscordOverwrite[];
    } | {
        key: "type" | "default_auto_archive_duration" | "communication_disabled_until" | "auto_archive_duration" | "archived" | "locked" | "invitable";
        new: string | number | boolean;
        old: string | number | boolean;
    })[] | undefined;
    userId?: bigint | undefined;
    targetId?: bigint | undefined;
    id: bigint;
    actionType: import("../types/shared.js").AuditLogEvents;
};
export interface AuditLogEntry extends ReturnType<typeof transformAuditLogEntry> {
}
